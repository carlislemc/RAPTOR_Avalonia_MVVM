<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Math Operators</title>

<!--(Meta)==========================================================-->

<meta http-equiv=Content-Type content="text/html">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1232>
<meta name=layout-width content=678>
<meta name=date content="01 1, 2004 2:17:26 PM">


<!--(Links)=========================================================-->

<link rel="stylesheet" href="../stylesheet.css">
<!--#include virtual="../navbars/navbar.shtml" -->



</head>

<!--(Body)==========================================================-->


<body>

<p><span style="font-size: 30pt;">Math Operators</span></p>

<p>The operators below can be used in any math expression. The expressions 
 can appear in assignments, select and loop exit comparisons, as values 
 to output, and as values to pass as arguments to a call. With the exception 
 of the unary minus, all operators are binary operators, meaning they operate 
 on the expressions immediately to the left and right of the operator.</p>

<p>&nbsp;</p>

<p>The operators are presented in order of precedence. This is the order 
 in which Raptor will perform operations if no parentheses are used.</p>

<h1>Unary Minus ( - )</h1>

<p style="font-family: Arial, sans-serif;">This is the minus sign before 
 an expression that changes its sign. It is NOT the subtraction operator, 
 which is listed later (and with much lower precedence). For example, if 
 x has the value 7, -x has the value -7. If y has the value -3, -y has 
 the value 3. If z has the value 3, then - - - z has the value -3.</p>

<h1>Exponentiation ( ^ or ** )</h1>

<p>Raises the value on the left of the operator to the power on the right 
 of the operator. For example, 2^3 has the value 8, and -3**2 has the value 
 9 (note that, based on precedence, the unary minus is applied to 3 before 
 it is raised to the power 2).</p>

<h1>Multiplication / Division / Remainders ( * , / , REM, MOD )</h1>

<p>All of these operators have the same precedence, so they are processed 
 left to right when no parentheses specify otherwise. The * operator is 
 used for multiplication, so 3 * 8 has the value 24 and -5 * 4 has the 
 value -20. The / operator is used for division, so 5 / 2 has the value 
 2.5. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->An 
 integer quotient can be found using the floor function: <code>floor</code> 
 ( 5 / 2 ). </p>

<p>&nbsp;</p>

<p>The REM and MOD operators both give the remainder when the value on 
 the left of the operator is divided by the operator on the right. Although 
 we normally think of remainders only in the context of integer division, 
 REM and MOD can be used with non-integer (i.e., those with a fractional 
 component) values as well. The table below shows how the remainder operators 
 work, with the bottom two examples showing the rare case in which they 
 differ, namely when exactly one of the divisor and dividend are negative.</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="text-align: center;">

<caption align=center
		style="text-align: center;"
		align=center>&nbsp;</caption>

<tr style="text-align: center;"
	align=center>
<td><strong style="font-weight: bold;">x</strong></td>
<td><strong style="font-weight: bold;">y</strong></td>
<td><strong style="font-weight: bold;">x REM y</strong></td>
<td style="text-align: center;"
	align=center><strong style="font-weight: bold;">x MOD y</strong></td></tr>

<tr style="text-align: center;"
	align=center>
<td>10</td>
<td>3</td>
<td>1</td>
<td>1</td></tr>

<tr style="text-align: center;"
	align=center>
<td>37</td>
<td>2</td>
<td>1</td>
<td>1</td></tr>

<tr style="text-align: center;"
	align=center>
<td>16</td>
<td>2</td>
<td>0</td>
<td>0</td></tr>

<tr style="text-align: center;"
	align=center>
<td>9.5</td>
<td>3</td>
<td>0.5</td>
<td>0.5</td></tr>

<tr style="text-align: center;"
	align=center>
<td>9.5</td>
<td>2.5</td>
<td>2</td>
<td>2</td></tr>

<tr style="text-align: center;"
	align=center>
<td>-10</td>
<td>3</td>
<td>-1</td>
<td>2</td></tr>

<tr style="text-align: center;"
	align=center>
<td>10</td>
<td>-3</td>
<td>1</td>
<td>-2</td></tr>
</table>

<p>&nbsp;</p>

<p>One common use for the REM (or MOD) operators is to determine if a value 
 is even or odd. If x is even, then x REM 2 will be 0. If x is odd, then 
 x REM 2 will be 1.</p>

<p>&nbsp;</p>

<p>For all division operators (/, REM, MOD), division by 0 results in a 
 run-time error.</p>

<h1>Addition / Subtraction ( + , - )</h1>

<p>These operators share the same precedence, so they are processed left 
 to right when no parentheses specify otherwise. The addition and subtraction 
 operators have the lowest precedence among the operators shown on this 
 page. Not unexpectedly, 3 + 2 has the value 5, while 2 - 7 has the value 
 -5.</p>

</body>

</html>
