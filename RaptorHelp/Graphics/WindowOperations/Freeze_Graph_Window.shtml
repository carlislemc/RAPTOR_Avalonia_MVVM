<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Freeze_Graph_Window</title>

<!--(Meta)==========================================================-->

<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1257>
<meta name=layout-width content=934>
<meta name=date content="02 11, 2004 8:37:21 PM">


<!--(Links)=========================================================-->

<link rel="stylesheet" href="../../stylesheet.css">
<!--#include virtual="../../navbars/navbarInner.html" -->



</head>

<!--(Body)==========================================================-->


<body>

<h1>Smoothing Animations</h1>

<p>Freeze_Graph_Window and Update_Graph_Window are used to smooth the display 
 of animations. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Without 
 Freeze_Graph_Window, each redraw of a complex animation screen can take 
 a noticeable amount of time, resulting in a very jerky animation. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p>&nbsp;</p>

<p>Freeze_Graph_Window helps the programmer avoid this problem by providing 
 a special screen buffer to which graphics objects can be drawn. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->After 
 Freeze_Graph_Window is called (and before Unfreeze_Graph_Window is called), 
 this buffer is used for all graphics calls. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->That 
 is, the objects being drawn by the graphics calls are not drawn to the 
 screen, but instead to the screen buffer. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->When 
 the programmer has drawn the desired objects to the screen buffer, the 
 Update_Graph_Window call is used to almost instantaneously move the screen 
 buffer to the viewable graphics screen. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->An 
 animation normally repeats the following steps:</p>

<p style="margin-left: 40px;">&nbsp;</p>

<p style="margin-left: 40px;">1) <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Draw 
 desired objects (to the screen buffer) using normal graphics calls (e.g., 
 Draw_Circle, Draw_Line, etc.)</p>

<p style="margin-left: 40px;"><span style="margin-left: 80px;">2) <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Call 
 Update_Graph_Window to make the drawn objects viewable (almost instantaneously)</span></p>

<p style="text-indent: -40px; margin-left: 80px;">&nbsp;</p>

<p style="margin-left: 0px;">When the animation is finished, or when the 
 programmer wants graphics objects to appear immediately when called, the 
 Unfreeze_Graph_Window routine is called. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->This 
 routine immediately updates the viewable screen with the contents of the 
 screen buffer, and it forces subsequent graphics calls to immediately 
 update the viewable screen rather than the screen buffer.</p>

<p style="margin-left: 0px;">&nbsp;</p>

<p style="margin-left: 0px; font-weight: bold;">Example Program</p>

<p style="margin-left: 0px; font-weight: normal;">&nbsp;</p>

<p style="margin-left: 0px; font-weight: normal;"><img src="../../Assets/freeze_demo.bmp"
														x-maintain-ratio=TRUE
														style="border: none;
	width: 698px;
	height: 829px;
	float: none;"
														width=698
														height=829
														border=0></p>

</body>

</html>
