<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>String Operations</title>

<!--(Meta)==========================================================-->

<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1354>
<meta name=layout-width content=613>
<meta name=date content="06 2, 2007 1:12:02 PM">


<!--(Links)=========================================================-->

<link rel="stylesheet" href="../../stylesheet.css">
<!--#include virtual="../navbars/navbarInner.shtml" -->



</head>

<!--(Body)==========================================================-->


<body>

<h1>String Operations</h1>

<p>Raptor supports two operations on strings. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The 
 first of these is concatenation, or &quot;gluing together&quot; of strings. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p>&nbsp;</p>

<p style="font-size: 18pt; font-weight: bold;">+ (Concatenation)</p>

<p>&nbsp;</p>

<p>The operator for concatenation is the plus (+) sign. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The 
 result of concatenation is that the string expression on the right of 
 the + is appended to the string on the left, thereby giving a new string 
 value. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->A 
 string expression can contain multiple plus signs to glue together many 
 strings.</p>

<p>&nbsp;</p>

<p>The string expression &quot;abc&quot; + &quot;def&quot; has the value 
 &quot;abcdef&quot;.</p>

<p>&nbsp;</p>

<p>Assuming the variable <span style="font-family: 'Courier New', monospace;">name</span> 
 has the value &quot;John&quot;, then &quot;Hello, &quot; + name + &quot;.&quot; 
 has the value &quot;Hello, John.&quot;.</p>

<p>&nbsp;</p>

<p>It is possible to concatenate a string expression with a numeric expression. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->In this 
 case, the result is a string expression. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->For 
 example, <span style="font-family: 'Courier New', monospace;">&quot;The 
 answer is: &quot; + count</span> will have the value <span style="font-family: 'Courier New', monospace;">&quot;The 
 answer is: 7&quot;</span> if the value of count is 7.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p style="font-weight: bold; font-size: 18pt;">Length_Of</p>

<p>&nbsp;</p>

<p style="font-weight: normal;">Length_Of is a function that returns the 
 length of a string expression or a one-dimensional array. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p style="font-weight: normal;">&nbsp;</p>

<p style="font-weight: normal;"><span style="font-family: 'Courier New', monospace;">Length_Of(stringVar)</span> 
 will return a value of 12 if stringVar has the value &quot;Hello World!&quot; 
 (don't forget the space and exclamation)</p>

<p style="font-weight: normal;"><span style="font-family: 'Courier New', monospace;">Length_Of(&quot;Answer&quot; 
 + &quot; is&quot;)</span> will return a value of 9.</p>

<p>&nbsp;</p>

<p style="font-weight: normal;">&nbsp;</p>

<p style="font-weight: bold; font-size: 18pt;">[ ] (Indexing)</p>

<p>&nbsp;</p>

<p>A string variable is, in effect, an array of characters with some special 
 properties and operations. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Because 
 a string is an array, we can access the individual characters making up 
 the string by using the array indexing notation.</p>

<p>&nbsp;</p>

<p>For example, if the string variable Name has the value &quot;John Doe&quot;, 
 then an assignment like the following:</p>

<p>&nbsp;</p>

<p><span style="font-family: 'Courier New', monospace;">initial &lt;- Name[1]</span> 
 </p>

<p>&nbsp;</p>

<p>gives the variable <span style="font-family: 'Courier New', monospace;">initial</span> 
 the value 'J'.</p>

<p>&nbsp;</p>

<p>Similarly, the assignment </p>

<p>&nbsp;</p>

<p style="font-family: 'Courier New', monospace;">Name[6] &lt;- 'F'</p>

<p>&nbsp;</p>

<p>changes the value of <span style="font-family: 'Courier New', monospace;">Name</span> 
 from &quot;John Doe&quot; to &quot;John Foe&quot;.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p style="font-weight: bold; font-size: 18pt;">To_Character</p>

<p>&nbsp;</p>

<p>To_Character is a function that returns the ASCII character that is 
 associated with the given numeric ASCII value.</p>

<p>&nbsp;</p>

<p>To_Character(70) will return a value of 'F', since 70 is the numeric 
 ASCII value for the F character.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p style="font-weight: bold; font-size: 18pt;"><span style="font-weight: bold; font-size: 18pt;">To_ASCII</span></p>

<p>&nbsp;</p>

<p>To_ASCII is a function that returns the numeric ASCII value that is 
 associated with the given ASCII character.</p>

<p>&nbsp;</p>

<p>To_ASCII('F') will return a value of 70, since 70 is the numeric ASCII 
 value for the F character.</p>

<p>&nbsp;</p>

</body>

</html>
