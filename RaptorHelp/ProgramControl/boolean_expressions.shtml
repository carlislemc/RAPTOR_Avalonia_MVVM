<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Controlling Flowchart Execution with Boolean Expressions</title>

<!--(Meta)==========================================================-->

<meta http-equiv=Content-Type content="text/html">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1164>
<meta name=layout-width content=678>
<meta name=date content="01 3, 2004 11:19:41 AM">


<!--(Links)=========================================================-->

<link rel="stylesheet" href="../stylesheet.css">
<!--#include virtual="../navbars/navbar.html" -->



</head>

<!--(Body)==========================================================-->


<body>

<h1>Controlling Flowchart Execution with Boolean Expressions</h1>

<p>The diamond <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->symbol 
 is used for decision making, either in a selection or loop structure. 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The programmer 
 enters in the diamond an expression that evaluates to Yes (True) or No 
 (False). Such expressions are formally referred to as Boolean expressions. 
 Based on the result of the expression in the diamond, control of the program 
 will branch either left (Yes, or True) or right (No, or False). In the 
 case of a diamond controlling exit from a loop, a Yes or True value results 
 in an exit from the loop, while a No or False value causes control to 
 continue in the loop and eventually to the top of the loop again.</p>

<p>&nbsp;</p>

<p>The most common Yes/No (True/False) expressions are programmed by comparing 
 two numeric expressions using one of the operators below:</p>

<p>&nbsp;</p>

<!--(Table)=========================================================-->
<table x-use-null-cells>

<tr>
<td>=</td>
<td>Equal</td>
<td>True if the compared items are equal</td></tr>

<tr>
<td colspan=1
	rowspan=1>
<p>/=</td>
<td colspan=1
	rowspan=1>
<p>Not Equal</td>
<td colspan=1
	rowspan=1>
<p>True if the compared items are not equal</td></tr>

<tr>
<td>
<p>!=</td>
<td>
<p>Not Equal</td>
<td>
<p>True if the compared items are not equal</td></tr>

<tr>
<td>&gt;</td>
<td>Greater Than</td>
<td>True if the expression on the left is greater than the expression on 
 the right</td></tr>

<tr>
<td>&lt;</td>
<td>Less Than</td>
<td>True if the expression on the left is less than the expression on the 
 right</td></tr>

<tr>
<td>&gt;=</td>
<td>Greater Than or Equal</td>
<td>True if the expression on the left is greater than or equal to the 
 expression on the right</td></tr>

<tr>
<td>&lt;=</td>
<td>Less Than or Equal</td>
<td>True if the expression on the left is less than or equal to the expression 
 on the right</td></tr>
</table>

<p>&nbsp;</p>

<p>Some examples of numeric comparisons follow:</p>

<p>&nbsp;</p>

<p style="font-family: 'Courier New', monospace;">count = 10</p>

<p style="font-family: 'Courier New', monospace;">count mod 7 != 0</p>

<p style="font-family: 'Courier New', monospace;">x &gt; maximum</p>

<p style="font-family: 'Courier New', monospace;">&nbsp;</p>

<p style="font-family: Arial, sans-serif; font-weight: bold;">Boolean Operators</p>

<p>&nbsp;</p>

<p>In addition, Boolean expressions can be combined using the AND, OR, 
 XOR and NOT Boolean operators to formulate arbitrarily complex logical 
 decisions. Some examples include:</p>

<p>&nbsp;</p>

<p><code style="font-family: monospace;">n &gt;= 1 and n &lt;= 10</code></p>

<p><code style="font-family: monospace;">n &lt; 1 or n &gt; 10</code></p>

<p>&nbsp;</p>

<p>The first example is true if n is BOTH greater than or equal to 1 AND 
 less than or equal to 10. The second is true if EITHER n is less than 
 1 OR n is greater than 10. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p>&nbsp;</p>

<p>The XOR and NOT Boolean operators are rarely used. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p style="margin-left: 40px;"><span style="font-family: 'Courier New', monospace;">expression1 
 XOR expression2</span> is true when either expression1 or expression2 
 is true, but not both.</p>

<p style="margin-left: 40px;"><span style="font-family: 'Courier New', monospace;">NOT 
 expression</span> is true when expression is false and false when expression 
 is true.</p>

<p>&nbsp;</p>

<p>While the examples above are numeric, the same comparison operators 
 can be used for comparing string expressions.</p>

<p>&nbsp;</p>

<p style="font-family: Arial, sans-serif; font-weight: bold;"><span style="font-family: Arial, sans-serif; font-weight: bold;">Boolean 
 Functions</span></p>

<p>&nbsp;</p>

<p>Finally, some functions <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->return 
 a value of true or false; these can also be used where ever a <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Boolean 
 expression is required. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Some 
 examples of these are:</p>

<p>&nbsp;</p>

<p style="font-family: 'Courier New', monospace;">Key_Hit</p>

<p style="font-family: 'Courier New', monospace;">Is_Open</p>

<p style="font-family: 'Courier New', monospace;">Mouse_Button_Pressed(Left_Button)</p>

<p>&nbsp;</p>

</body>

</html>
